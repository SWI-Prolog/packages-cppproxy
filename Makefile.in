################################################################
# Makefile template for SWI-Prolog C++ proxy package
#
# This template is used by configure to create Makefile.  See
# the file INSTALL for further installation instructions.
#
# License: LGPL
#
# Author: Jan Wielemaker (wielemak@science.uva.nl)
################################################################

.SUFFIXES: .tex .dvi .doc .pl

PL=@PL@
PLBASE=@PLBASE@
PLARCH=@PLARCH@
PLINCL=@PLINCL@
PKGDOC=$(PLBASE)/doc/packages
PCEHOME=../xpce
EXDIR=$(PKGDOC)/examples/cppproxy
DESTDIR=

CC=@CC@
COFLAGS=@COFLAGS@
CWFLAGS=@CWFLAGS@
CMFLAGS=@CMFLAGS@
CIFLAGS=
CFLAGS=$(COFLAGS) $(CWFLAGS) $(CMFLAGS) $(CIFLAGS) @DEFS@
LIBS=@LIBS@

DOCTOTEX=$(PCEHOME)/bin/doc2tex
PLTOTEX=$(PCEHOME)/bin/pl2tex
DOC=cppproxy
TEX=$(DOC).tex
DVI=$(DOC).dvi
PDF=$(DOC).pdf
RUNTEX=../../man/runtex

LD=@LD@
LDFLAGS=@LDSOFLAGS@

INSTALL=@INSTALL@
INSTALL_PROGRAM=@INSTALL_PROGRAM@
INSTALL_DATA=@INSTALL_DATA@

LIBPL=		cpp_codegen.pl cpp_interface.pl cpp_server.pl typedef.pl
HDR=		SWI-proxy.cpp SWI-proxy.h
EXAMPLES=	Makefile README parms.pl \
		person.pl person.cpp \
		sqrt.pl sqrt.cpp \
		time.pl time.cpp
EXAMPLEEXE=	run
TARGETS=	serialize.@SO@

all:		$(TARGETS)

serialize.@SO@:	serialize.o
		$(LD) $(LDFLAGS) -o $@ serialize.o

install:	$(TARGETS) $(LIBPL)
		mkdir -p $(DESTDIR)$(PLBASE)/lib/$(PLARCH)
		for f in $(TARGETS); do \
		  $(INSTALL) -m 755 $$f $(DESTDIR)$(PLBASE)/lib/$(PLARCH); \
		done
		mkdir -p $(DESTDIR)$(PLBASE)/library
		for f in $(LIBPL); do \
		  $(INSTALL) -m 644 $$f $(DESTDIR)$(PLBASE)/library; \
		done
		mkdir -p $(DESTDIR)$(PLBASE)/include
		for f in $(HDR); do \
		  $(INSTALL) -m 644 $$f $(DESTDIR)$(PLBASE)/include; \
		done
		$(PL) -f none -g make -t halt

rpm-install:	install

html-install:	install-examples
		mkdir -p $(DESTDIR)$(PKGDOC)
		$(INSTALL) -m 644 $(DOC).html $(DESTDIR)$(PKGDOC)

pdf-install:	install-examples
		mkdir -p $(DESTDIR)$(PKGDOC)
		$(INSTALL) -m 644 $(DOC).pdf $(DESTDIR)$(PKGDOC)

install-examples::
		mkdir -p $(DESTDIR)$(EXDIR)
		(cd examples && $(INSTALL_DATA) $(EXAMPLES) $(DESTDIR)$(EXDIR))
		(cd examples && $(INSTALL_PROGRAM) $(EXAMPLEEXE) $(DESTDIR)$(EXDIR))


uninstall::
		(cd $(PLBASE)/lib/$(PLARCH) && rm -f $(TARGETS))
		(cd $(PLBASE)/library && rm -f $(LIBPL))
		(cd $(PLBASE)/include && rm -f $(HDR))
		$(PL) -f none -g make -t halt

.cpp.o:
		g++ $(CFLAGS) -c -o $*.o $*.cpp


################################################################
# Testing
################################################################

check::


################################################################
# Documentation
################################################################

pdf:		$(PDF)

$(DVI):		$(TEX)
		$(RUNTEX) $(DOC)

$(PDF):		$(TEX)
		$(RUNTEX) --pdf $(DOC)

html:		$(TEX)
		latex2html $(DOC)
		mv html/index.html $(DOC).html
		rm -r html

$(TEX):		$(DOCTOTEX)

.doc.tex:
		$(DOCTOTEX) $*.doc > $*.tex
.pl.tex:
		$(PLTOTEX) $*.pl > $*.tex

################################################################
# Clean
################################################################

clean:
		rm -f $(OBJ) *~ *.o *% a.out core config.log

distclean:	clean
		rm -f $(TARGETS) config.cache config.h config.status Makefile
		rm -f $(DOC).aux $(DOC).log $(DOC).out $(DOC).toc $(DOC).ilg
		rm -f $(DOC).tex
		rm -rf html
