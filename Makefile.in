################################################################
# Makefile template for SWI-Prolog C++ proxy package
#
# This template is used by configure to create Makefile.  See
# the file INSTALL for further installation instructions.
#
# Copyright: Simplified BSD license
#
# Author: Jan Wielemaker (J.Wielemaker@vu.nl)
################################################################

PACKAGE=cppproxy
DOC=cppproxy
include ../Makefile.defs
CFLAGS+= -I.
EXDIR=$(PKGEXDIR)/cppproxy

LIBPL=		cpp_codegen.pl cpp_interface.pl cpp_server.pl typedef.pl
HDR=		SWI-proxy.cpp SWI-proxy.h
EXAMPLES=	Makefile README parms.pl \
		person.pl person.cpp \
		sqrt.pl sqrt.cpp \
		time.pl time.cpp
EXAMPLEEXE=	run
TARGETS=	serialize.@SO@

all:		$(TARGETS)

serialize.@SO@:	serialize.o
		$(LD) $(LDSOFLAGS) -o $@ serialize.o

install:	$(TARGETS) $(LIBPL)
		mkdir -p $(DESTDIR)$(SOLIBDIR)
		for f in $(TARGETS); do \
		  $(INSTALL) -m 755 $$f $(DESTDIR)$(SOLIBDIR); \
		done
		mkdir -p $(DESTDIR)$(PLLIBDIR)
		for f in $(LIBPL); do \
		  $(INSTALL) -m 644 $$f $(DESTDIR)$(PLLIBDIR); \
		done
		mkdir -p $(DESTDIR)$(PLINCL)
		for f in $(HDR); do \
		  $(INSTALL) -m 644 $$f $(DESTDIR)$(PLINCL); \
		done
		$(MKINDEX)

ln-install:	$(LIBPL)
		$(MAKE) INSTALL_DATA="../ln-install" INSTALL_PROGRAM="../ln-install" install

pdf-install:	install-examples
		$(INSTALL_DATA) $(DOC).pdf $(DESTDIR)$(PKGDOC)

html-install:	install-examples
		$(INSTALL_DATA) $(DOC).html httpserver.gif $(DESTDIR)$(PKGDOC)

install-examples::
		mkdir -p $(DESTDIR)$(EXDIR)
		(cd examples && $(INSTALL_DATA) $(EXAMPLES) $(DESTDIR)$(EXDIR))
		(cd examples && $(INSTALL_PROGRAM) $(EXAMPLEEXE) $(DESTDIR)$(EXDIR))


uninstall::
		(cd $(SOLIBDIR) && rm -f $(TARGETS))
		(cd $(PLLIBDIR) && rm -f $(LIBPL))
		(cd $(PLINCL) && rm -f $(HDR))
		$(MKINDEX)

.cpp.o:
		g++ $(CFLAGS) -c -o $*.o $*.cpp


################################################################
# Testing
################################################################

check::


################################################################
# Documentation
################################################################


################################################################
# Clean
################################################################

clean:
		rm -f $(OBJ) *~ *.o *% a.out core config.log

distclean:	clean
		rm -f $(TARGETS) config.cache config.h config.status Makefile
		rm -f $(DOC).aux $(DOC).log $(DOC).out $(DOC).toc $(DOC).ilg
		rm -f $(DOC).tex
		rm -rf html
